/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.*;
import java.awt.CardLayout;
import java.awt.event.*;
import java.util.*;
import javax.swing.border.*;

/**
 *
 * @author Jan
 */
public class BoardDisplay extends javax.swing.JPanel {

    /**
     * Creates new form Board
     */
    public BoardDisplay() {
        initComponents();
		screens = (CardLayout)(prompt.getLayout ());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        content = new javax.swing.JPanel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 16), new java.awt.Dimension(0, 16), new java.awt.Dimension(32767, 16));
        prompt = new javax.swing.JPanel();
        noDisplay = new javax.swing.JPanel();
		notification = new javax.swing.JPanel ();
		notifText = new javax.swing.JLabel ();
        choosePath = new javax.swing.JPanel();
        filler10 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 64), new java.awt.Dimension(0, 64), new java.awt.Dimension(32767, 64));
        question = new javax.swing.JPanel();
        labelQuestion = new javax.swing.JLabel();
        filler7 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 64), new java.awt.Dimension(0, 64), new java.awt.Dimension(32767, 64));
        buttons = new javax.swing.JPanel();
        btnChoice1 = new javax.swing.JButton();
        btnChoice2 = new javax.swing.JButton();
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 64), new java.awt.Dimension(0, 64), new java.awt.Dimension(32767, 32));
        drawCard = new javax.swing.JPanel();
        card = new javax.swing.JButton();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(32, 0), new java.awt.Dimension(32, 0), new java.awt.Dimension(32, 32767));
        descriptionBox = new javax.swing.JPanel();
        cardTitle = new javax.swing.JLabel();
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 16), new java.awt.Dimension(0, 16), new java.awt.Dimension(32767, 16));
        jScrollPane2 = new javax.swing.JScrollPane();
        cardDescription = new javax.swing.JTextArea();
        filler8 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 48), new java.awt.Dimension(0, 48), new java.awt.Dimension(32767, 48));
        pickHouseCard = new javax.swing.JPanel();
        houseCards = new ArrayList<> ();
        pickCareerCard = new javax.swing.JPanel();
        careerCards = new javax.swing.JButton[2];
        pickSalaryCard = new javax.swing.JPanel();
        salaryCards = new javax.swing.JButton[2];
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 32), new java.awt.Dimension(0, 32), new java.awt.Dimension(32767, 32));
        map = new Map ();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 16), new java.awt.Dimension(0, 16), new java.awt.Dimension(32767, 16));
        background = new javax.swing.JLabel();

        setAlignmentX(0.0F);
		setAlignmentY(0.0F);
        setPreferredSize(new java.awt.Dimension(1248, 552));
        setLayout(new javax.swing.OverlayLayout(this));

        content.setAlignmentX(0.0F);
        content.setOpaque(false);
        content.setLayout(new javax.swing.BoxLayout(content, javax.swing.BoxLayout.Y_AXIS));
        content.add(filler2);

        prompt.setOpaque(false);
        prompt.setLayout(new java.awt.CardLayout());

        noDisplay.setOpaque(false);

        javax.swing.GroupLayout interactNoneLayout = new javax.swing.GroupLayout(noDisplay);
        noDisplay.setLayout(interactNoneLayout);
        interactNoneLayout.setHorizontalGroup(
            interactNoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1248, Short.MAX_VALUE)
        );
        interactNoneLayout.setVerticalGroup(
            interactNoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 312, Short.MAX_VALUE)
        );

        prompt.add(noDisplay, "Blank");

		notification.setOpaque(false);

        notifText.setFont(new java.awt.Font(GUI.GAME_FONT, 0, 36)); // NOI18N
        notifText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        notifText.setText("NOTIFICATION");
        notifText.setOpaque(true);
        notifText.setPreferredSize(new java.awt.Dimension(512, 64));

        javax.swing.GroupLayout question1Layout = new javax.swing.GroupLayout(notification);
        notification.setLayout(question1Layout);
        question1Layout.setHorizontalGroup(
            question1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1248, Short.MAX_VALUE)
            .addGroup(question1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(question1Layout.createSequentialGroup()
                    .addGap(0, 368, Short.MAX_VALUE)
                    .addComponent(notifText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 368, Short.MAX_VALUE)))
        );
        question1Layout.setVerticalGroup(
            question1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 312, Short.MAX_VALUE)
            .addGroup(question1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(question1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(notifText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        prompt.add(notification, "Notification");

        choosePath.setOpaque(false);
        choosePath.setLayout(new javax.swing.BoxLayout(choosePath, javax.swing.BoxLayout.Y_AXIS));
        choosePath.add(filler10);

        question.setOpaque(false);

        labelQuestion.setFont(new java.awt.Font(GUI.GAME_FONT, 0, 48)); // NOI18N
        labelQuestion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelQuestion.setText("Select a path");
        labelQuestion.setOpaque(true);
        labelQuestion.setPreferredSize(new java.awt.Dimension(512, 64));

        javax.swing.GroupLayout questionLayout = new javax.swing.GroupLayout(question);
        question.setLayout(questionLayout);
        questionLayout.setHorizontalGroup(
            questionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1248, Short.MAX_VALUE)
            .addGroup(questionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(questionLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(labelQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        questionLayout.setVerticalGroup(
            questionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 64, Short.MAX_VALUE)
            .addGroup(questionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(questionLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(labelQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        choosePath.add(question);
        choosePath.add(filler7);

        buttons.setOpaque(false);
        buttons.setLayout(new java.awt.FlowLayout(1, 96, 5));

        btnChoice1.setFont(new java.awt.Font(GUI.GAME_FONT, 0, 24)); // NOI18N
        btnChoice1.setText("Start a Family");
        btnChoice1.setPreferredSize(new java.awt.Dimension(320, 48));
        btnChoice1.setActionCommand ("Junction 1");
		
        buttons.add(btnChoice1);

        btnChoice2.setFont(new java.awt.Font(GUI.GAME_FONT, 0, 24)); // NOI18N
        btnChoice2.setText("Continue along path");
        btnChoice2.setPreferredSize(new java.awt.Dimension(320, 48));
		btnChoice2.setActionCommand ("Junction 2");
        buttons.add(btnChoice2);

        choosePath.add(buttons);
        choosePath.add(filler6);

        prompt.add(choosePath, "Junction selection");

        drawCard.setBackground(new java.awt.Color(0, 153, 0));
        drawCard.setMaximumSize(new java.awt.Dimension(1248, 32767));
        drawCard.setOpaque(false);
        drawCard.setPreferredSize(new java.awt.Dimension(1248, 289));

		card.setPreferredSize (new Dimension (202, 268));
        card.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        card.setIcon(new javax.swing.ImageIcon(getClass().getResource("./graphics/cardColor.png"))); // NOI18N
		card.setActionCommand ("Draw card");
        drawCard.add(card);
        drawCard.add(filler4);

        descriptionBox.setOpaque(false);
        descriptionBox.setLayout(new javax.swing.BoxLayout(descriptionBox, javax.swing.BoxLayout.Y_AXIS));

        cardTitle.setFont(new java.awt.Font(GUI.GAME_FONT, 0, 36)); // NOI18N
        cardTitle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        cardTitle.setText("Draw a card");
        descriptionBox.add(cardTitle);
        descriptionBox.add(filler5);

        cardDescription.setEditable(false);
        cardDescription.setColumns(20);
        cardDescription.setFont(new java.awt.Font(GUI.GAME_FONT, 0, 24)); // NOI18N
        cardDescription.setLineWrap(true);
        cardDescription.setRows(5);
        cardDescription.setText("");
        cardDescription.setWrapStyleWord(true);
        cardDescription.setBorder(null);
        cardDescription.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        cardDescription.setEnabled(false);
        cardDescription.setFocusable(false);
		cardDescription.setBackground (new Color (0, 0, 0, 0));
		cardDescription.setOpaque (false);
		jScrollPane2.setOpaque (false);
		jScrollPane2.setBorder (null);
        jScrollPane2.setViewportView(cardDescription);
		jScrollPane2.getViewport ().setOpaque (false);

        descriptionBox.add(jScrollPane2);
        descriptionBox.add(filler8);

        drawCard.add(descriptionBox);

        prompt.add(drawCard, "Card draw");
		
		pickHouseCard.setOpaque(false);
        pickHouseCard.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 32, 5));
		
		for (int i = 0; i < 5; i++) {
			houseCards.add (new javax.swing.JButton ());
			houseCards.get (i).setPreferredSize (new Dimension (202, 268));
			houseCards.get (i).setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			houseCards.get (i).setIcon(new javax.swing.ImageIcon(getClass().getResource("./graphics/houseCard" + i + ".png"))); // NOI18N
			houseCards.get (i).setActionCommand ("House card " + (i + 1));
			pickHouseCard.add(houseCards.get (i));
		}
		
        prompt.add(pickHouseCard, "Select house card");
		
		pickCareerCard.setOpaque(false);
        pickCareerCard.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 32, 5));
		
		for (int i = 0; i < 2; i++) {
			careerCards[i] = new javax.swing.JButton ();
			careerCards[i].setPreferredSize (new Dimension (202, 268));
			careerCards[i].setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			careerCards[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("./graphics/cardColor.png"))); // NOI18N
			careerCards[i].setActionCommand ("Career card " + (i + 1));
			pickCareerCard.add(careerCards[i]);
		}
		
        prompt.add(pickCareerCard, "Select career card");
		
		pickSalaryCard.setOpaque(false);
        pickSalaryCard.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 32, 5));
		
		for (int i = 0; i < 2; i++) {
			salaryCards[i] = new javax.swing.JButton ();
			salaryCards[i].setPreferredSize (new Dimension (202, 268));
			salaryCards[i].setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			salaryCards[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("./graphics/cardColor.png"))); // NOI18N
			salaryCards[i].setActionCommand ("Salary card " + (i + 1));
			pickSalaryCard.add(salaryCards[i]);
		}
		
        prompt.add(pickSalaryCard, "Select salary card");

        content.add(prompt);
        content.add(filler3);

        map.setMaximumSize(new java.awt.Dimension(1248, 32767));
        map.setPreferredSize(new java.awt.Dimension(1248, 216));

        content.add(map);
        content.add(filler1);

        add(content);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("./graphics/background.png"))); // NOI18N
        background.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        background.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        background.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        add(background);
    }// </editor-fold>//GEN-END:initComponents
	
	
	
	/* Methods for BoardDisplay */
	public void displayScreen (String screen) {
		screens.show (prompt, screen);
	}
	
	public void drawCards (int num) {
		for (int i = 0; i < num; i++)
			pickHouseCard.add (houseCards.get (i));
	}
	
	public void setActionListener (ActionListener listener) {
		btnChoice1.addActionListener (listener);
		btnChoice2.addActionListener (listener);
		card.addActionListener (listener);
		for (int i = 0; i < 5; i++) 
			houseCards.get (i).addActionListener (listener);
		for (int i = 0; i < 2; i++) {
			careerCards[i].addActionListener (listener);
			salaryCards[i].addActionListener (listener);
		}
	}
	
	public void setJunctionMode (int mode) {
		switch (mode) {
			case 1: {
				btnChoice1.setText ("Go to College");
				btnChoice1.setActionCommand ("College path");
				btnChoice2.setActionCommand ("College alternate path");
			} break;
			
			case 2: {
				btnChoice1.setText ("Start a Family");
				btnChoice1.setActionCommand ("Family path");
				btnChoice2.setActionCommand ("Family alternate path");
			} break;
			
			case 3: {
				btnChoice1.setText ("Change Career");
				btnChoice1.setActionCommand ("Career path");
				btnChoice2.setActionCommand ("Career alternate path");
			} break;
			
		}
	}
	
	public void notificationMode (int mode) {
		switch (mode) {
			case 1: {
				notifText.setText("It's pay day");
			} break;
			
			case 2: {
				notifText.setText("You have received a pay raise");
			} break;
			
			case 3: {
				notifText.setText("Select a player to target");
			} break;
		}
	}
	
	public void displayPromptCard (Color color) {
		if (color.equals (GUI.ORANGE))
			card.setIcon (new javax.swing.ImageIcon(getClass().getResource("./graphics/cardOrange.png")));
		else
			card.setIcon (new javax.swing.ImageIcon(getClass().getResource("./graphics/cardBlue.png")));
	}
	
	public void updateButtons (String text1, String text2) {
		btnChoice1.setIcon (null);
		btnChoice2.setIcon (null);
		btnChoice1.setText (text1);
		btnChoice2.setText (text2);
	}
	
	public void updatePromptCardText (Card Refcard) {
		cardTitle.setText (Refcard.getTitle ());
		cardDescription.setText (Refcard.getDescription ());
		if (Refcard instanceof ActionCard)
			cardDescription.setText (Refcard.getDescription () + ", $" + ((ActionCard)Refcard).getAmount ());
		card.setEnabled (false);
			
	}
	
	public void displayHouseCards (int num) {
		pickHouseCard.removeAll ();
		for (int i = 0; i < num; i++) {
			pickHouseCard.add (houseCards.get (i));
			((javax.swing.JButton)pickHouseCard.getComponent (i)).setActionCommand ("House card " + (i + 1));
			System.out.println ("House card " + (i + 1));
		}
	}
	
	public void removeHouseCard (int index) {
		houseCards.remove (index);
	}
	
	public void resetPrompt () {
		screens.show (prompt, "Blank");
		card.setEnabled (true);
        card.setIcon(new javax.swing.ImageIcon(getClass().getResource("./graphics/cardColor.png"))); // NOI18N
		cardTitle.setText ("Draw a card");
		cardDescription.setText ("");
	}

	
	
	/* Methods for Map */
	public void loadMap (ThatsLife game) {
		map.loadMap (game);
	}
	
    public void drawMap (int pos) {
		map.drawMap (pos);
	}
	
	

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JButton btnChoice1;
    private javax.swing.JButton btnChoice2;
    private javax.swing.JPanel buttons;
    private javax.swing.JButton card;
    private ArrayList<javax.swing.JButton> houseCards;
    private javax.swing.JButton[] careerCards;
    private javax.swing.JButton[] salaryCards;
    private javax.swing.JPanel content;
    private javax.swing.JPanel descriptionBox;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler10;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private javax.swing.Box.Filler filler6;
    private javax.swing.Box.Filler filler7;
    private javax.swing.Box.Filler filler8;
    private javax.swing.JPanel drawCard;
    private javax.swing.JPanel pickHouseCard;
    private javax.swing.JPanel pickCareerCard;
    private javax.swing.JPanel pickSalaryCard;
    private javax.swing.JPanel noDisplay;
	private javax.swing.JPanel notification;
    private javax.swing.JPanel choosePath;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea cardDescription;
    private javax.swing.JLabel labelQuestion;
	private javax.swing.JLabel notifText;
    private Map map;
    private javax.swing.JPanel prompt;
    private javax.swing.JPanel question;
    private javax.swing.JLabel cardTitle;
	private CardLayout screens;
    // End of variables declaration//GEN-END:variables
}
